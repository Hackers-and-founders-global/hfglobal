name: CI/CD Worflow Development Enviroment

on:
  push:
    branches:
      - Development
  pull_request:
    branches:
      - Development

jobs:
  tests:
    runs-on: ubuntu-latest
    name: Test - PHP 8.1

    services:
      mysql:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: db_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Cache PHP Dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: dependencies-php-8.1-composer-${{ hashFiles('**/composer.lock') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysql, sqlite, pdo_sqlite, gd
          coverage: none

      - name: Copy ENV Laravel Configuration for CI
        run: php -r "file_exists('.env') || copy('.env.ci', '.env');"
        
      - name: Install dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Build app
        run: npm install && npm run build
        
      - name: Generate key
        run: php artisan key:generate

      - name: Execute Migrations
        run: php artisan migrate
        
      - name: Execute tests (Unit and Feature tests) via PHPUnit
        run: vendor/bin/phpunit --verbose
        
  deploy:
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/Development'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Cache PHP Dependencies
        uses: actions/cache@v3
        with:
          path: vendor
          key: dependencies-php-composer-${{ hashFiles('**/composer.lock') }}

      # - name: Install SSH Key
      #   uses: shimataro/ssh-key-action@v2
      #   with:
      #     key: ${{ secrets.KEY }}
      #     known_hosts: 'known-hosts-temp'

      # - name: Adding Known Hosts
      #   run: ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
      
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          port: ${{ secrets.PORT }}
          key: ${{ secrets.KEY }}
          script: "cd /var/www/hfglobal && ./.scripts/deploy_development.sh"
