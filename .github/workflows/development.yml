name: CI/CD Worflow Development Enviroment

on:
  push:
    branches:
      - Development
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    name: Test - PHP 8.1
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Cache PHP Dependencies
        uses: actions/cache@v1
        with:
          path: vendor
          key: dependencies-php-8.1-composer-${{ hashFiles('**/composer.lock') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd
          coverage: none

      - name: Copy ENV Laravel Configuration for CI
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"
        
      - name: Install dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
        
      - name: Generate key
        run: php artisan key:generate
        
      - name: Execute tests
        run: vendor/bin/phpunit --verbose
        
  deploy:
    runs-on: ubuntu-latest
    needs: tests
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        
      - name: Cache PHP Dependencies
        uses: actions/cache@v1
        with:
          path: vendor
          key: dependencies-php-composer-${{ hashFiles('**/composer.lock') }}
          
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd
          coverage: none
          
      - name: Install Dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist
        
      - name: Copy DOTENV File
        run: php -r "file_put_contents(__DIR__ . '/.env', '${{ secrets.DOT_ENV_HFGLOBAL_DEVELOP }}');"
        
      - name: Deploy
        uses: AEnterprise/rsync-deploy@v1.0
        env:
          DEPLOY_KEY: ${{ secrets.KEY }}
          ARGS: '-avzh --exclude=".*"'
          SERVER_PORT: ${{ secrets.PORT }}
          FOLDER: "./"
          SERVER_IP: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          SERVER_DESTINATION: "/var/www/hfglobal"
